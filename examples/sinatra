#!/usr/bin/ruby
require 'rubygems'
require 'cli'
require 'ip'

settings = CLI.new do
	description 'Example CLI usage for Sinatra server application'
	version "1.0.0"
	switch :no_bind,			:description => "Do not bind to TCP socket - useful with -s fastcgi option"
	switch :no_logging,			:description => "Disable logging"
	switch :debug,				:description => "Enable debugging"
	switch :no_optimization,	:description => "Disable size hinting and related optimization (loading, prescaling)"
	option :bind,				:short => :b, :default => '127.0.0.1', :cast => IP, :description => "HTTP server bind address - use 0.0.0.0 to bind to all interfaces"
	option :port,				:short => :p, :default => 3100, :cast => Integer, :description => "HTTP server TCP port"
	option :server,				:short => :s, :default => 'mongrel', :description => "Rack server handler like thin, mongrel, webrick, fastcgi etc."
	option :limit_memory,		:default => 128*1024**2, :cast => Integer, :description => "Image cache heap memory size limit in bytes"
	option :limit_map,			:default => 256*1024**2, :cast => Integer, :description => "Image cache memory mapped file size limit in bytes - used when heap memory limit is used up"
	option :limit_disk,			:default => 0, :cast => Integer, :description => "Image cache temporary file size limit in bytes - used when memory mapped file limit is used up"
end.parse!

p settings

## use to set sinatra settings
#require 'sinatra/base'
#
#sinatra = Sinatra.new
#
#sinatra.set :environment, 'production'
#sinatra.set :server, settings.server
#sinatra.set :lock, true
#sinatra.set :boundary, "thumnail image data"
#sinatra.set :logging, (not settings.no_logging)
#sinatra.set :debug, settings.debug
#sinatra.set :optimization, (not settings.no_optimization)
#sinatra.set :limit_memory, settings.limit_memory
#sinatra.set :limit_map, settings.limit_map
#sinatra.set :limit_disk, settings.limit_disk

